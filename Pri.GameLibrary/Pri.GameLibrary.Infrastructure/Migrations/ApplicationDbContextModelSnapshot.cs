// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.GameLibrary.Infrastructure.Data;

#nullable disable

namespace Pri.GameLibrary.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformsId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "PlatformsId");

                    b.HasIndex("PlatformsId");

                    b.ToTable("GamePlatform", (string)null);

                    b.HasData(
                        new
                        {
                            GamesId = 1,
                            PlatformsId = 1
                        },
                        new
                        {
                            GamesId = 1,
                            PlatformsId = 2
                        },
                        new
                        {
                            GamesId = 1,
                            PlatformsId = 4
                        },
                        new
                        {
                            GamesId = 2,
                            PlatformsId = 1
                        },
                        new
                        {
                            GamesId = 2,
                            PlatformsId = 2
                        },
                        new
                        {
                            GamesId = 3,
                            PlatformsId = 1
                        },
                        new
                        {
                            GamesId = 3,
                            PlatformsId = 2
                        },
                        new
                        {
                            GamesId = 3,
                            PlatformsId = 3
                        },
                        new
                        {
                            GamesId = 3,
                            PlatformsId = 4
                        },
                        new
                        {
                            GamesId = 4,
                            PlatformsId = 1
                        },
                        new
                        {
                            GamesId = 5,
                            PlatformsId = 2
                        },
                        new
                        {
                            GamesId = 6,
                            PlatformsId = 3
                        },
                        new
                        {
                            GamesId = 7,
                            PlatformsId = 3
                        },
                        new
                        {
                            GamesId = 8,
                            PlatformsId = 3
                        },
                        new
                        {
                            GamesId = 9,
                            PlatformsId = 3
                        },
                        new
                        {
                            GamesId = 10,
                            PlatformsId = 1
                        },
                        new
                        {
                            GamesId = 10,
                            PlatformsId = 4
                        });
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1986, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bethesda"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2000, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Double Fine"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(1986, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "FromSoftware"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(1989, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Game Freak"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santa Monica Studios"
                        });
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.ToTable("Games", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2021, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 2,
                            Name = "Psychonauts 2"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2018, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 5,
                            Name = "God of War"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2018, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 3,
                            Name = "Dark Souls: Remastered"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 3,
                            Name = "Elden Ring"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2015, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 3,
                            Name = "Bloodborne"
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(2022, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 4,
                            Name = "Pokemon Scarlet"
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(2022, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 4,
                            Name = "Pokemon Violet"
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 4,
                            Name = "Pokemon Sword"
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(2019, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 4,
                            Name = "Pokemon Shield"
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(2023, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeveloperId = 1,
                            Name = "Starfield"
                        });
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.GameUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.HasIndex("ReviewId");

                    b.ToTable("GamesUsers", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            GameId = 1,
                            ReviewId = 1
                        },
                        new
                        {
                            UserId = 1,
                            GameId = 7,
                            ReviewId = 2
                        },
                        new
                        {
                            UserId = 2,
                            GameId = 10,
                            ReviewId = 3
                        },
                        new
                        {
                            UserId = 5,
                            GameId = 4,
                            ReviewId = 4
                        },
                        new
                        {
                            UserId = 4,
                            GameId = 4,
                            ReviewId = 5
                        });
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platforms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2003, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Steam"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2013, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Playstation 4"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nintendo Switch"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2013, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Xbox One S"
                        });
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9043),
                            Description = "Psychonauts 2 is everything I wanted a Psychonauts sequel to be. It delivers on a compelling new chapter of the story full of unique characters, tighter platforming, amazing combat for a platformer, and best of all: incredible new mind-themed worlds to explore. Unlike the original, Psychonauts 2 doesn’t suffer from inconsistent difficulty and flubbing level gimmicks. The worst I can say is that the pacing at the very end felt a little off and occasionally voice lines got interrupted, but if you’re a fan of collectathon platformers, or 3D platformers in general, I cannot recommend Psychonauts 2 enough.",
                            Rating = 9
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9045),
                            Rating = 3
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9046),
                            Rating = 8
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9048),
                            Rating = 7
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9049),
                            Rating = 6
                        });
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(8992),
                            Email = "Jarno.Caenepeel@student.howest.com",
                            Name = "Jarno Caenepeel"
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9023),
                            Email = "lipsum@hotmail.com",
                            Name = "lorem ipsum"
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9026),
                            Email = "George@hotmail.com",
                            Name = "George O. Estrada"
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9027),
                            Email = "Enos@hotmail.com",
                            Name = "Enos White"
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2023, 10, 20, 0, 24, 1, 756, DateTimeKind.Local).AddTicks(9029),
                            Email = "Mable@gmail.com",
                            Name = "Mable Parisian"
                        });
                });

            modelBuilder.Entity("GamePlatform", b =>
                {
                    b.HasOne("Pri.GameLibrary.Core.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.GameLibrary.Core.Entities.Platform", null)
                        .WithMany()
                        .HasForeignKey("PlatformsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.Game", b =>
                {
                    b.HasOne("Pri.GameLibrary.Core.Entities.Developer", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.GameUser", b =>
                {
                    b.HasOne("Pri.GameLibrary.Core.Entities.Game", "Game")
                        .WithMany("Users")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.GameLibrary.Core.Entities.Review", "Review")
                        .WithMany()
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.GameLibrary.Core.Entities.User", "User")
                        .WithMany("Games")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Review");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.Developer", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.Game", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Pri.GameLibrary.Core.Entities.User", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
